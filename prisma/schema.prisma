// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  email String @unique
  name String?
  password String?
  role Role @default(USER)

  product Product[]
  accounts Account[]
  session Session[]
}

model Product{
  id  Int @id @default(autoincrement())
      p_name String
      description String?
      price Float
      stock Int @default(0)
      createdAt DateTime @default(now())
      image Image[]

      userid  Int
      user User @relation(fields: [userid], references:[id])
}

model Image{
  id Int @id @default(autoincrement())
  url String
  productId Int
  product Product @relation(fields: [productId], references:[id])
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
enum Role{
  USER
  ADMIN

}